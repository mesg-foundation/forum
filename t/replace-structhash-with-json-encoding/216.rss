<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Replace structhash with json encoding</title>
    <link>https://forum.mesg.com/t/replace-structhash-with-json-encoding/216</link>
    <description>Based on discussion https://github.com/mesg-foundation/core/issues/718#issuecomment-455535167

The structhash do not support `omitempty` flag. Moreover it dosen&#39;t:

- panic on invalid tag (rather silently drop)
- https://github.com/cnf/structhash/blob/master/structhash.go#L180 -  it serialize functions, channels etc ... in our use case serializing channel/funcs don&#39;t make any sens.

So we need to fix it.

Is there a reason why we using this package instead of simple json?

we can use simply `sha1.Sum(josn.Marshal(service))`. End of story.

In that case we have well tested stable package and we can easily extend service struct by adding `omitempty` tag to every new field.

We just need to replace tag `hash` with `json` and get rid of dependency.</description>
    
    <lastBuildDate>Tue, 22 Jan 2019 03:33:43 +0000</lastBuildDate>
    <category>Engine</category>
    <atom:link href="https://forum.mesg.com/t/replace-structhash-with-json-encoding/216.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Replace structhash with json encoding</title>
        <dc:creator><![CDATA[Nicolas]]></dc:creator>
        <description><![CDATA[
            <p>Related to <a href="https://github.com/mesg-foundation/core/issues/718" rel="nofollow noopener">https://github.com/mesg-foundation/core/issues/718</a></p>
          <p><a href="https://forum.mesg.com/t/replace-structhash-with-json-encoding/216/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mesg.com/t/replace-structhash-with-json-encoding/216/4</link>
        <pubDate>Tue, 22 Jan 2019 03:33:43 +0000</pubDate>
        <guid isPermaLink="false">forum.mesg.com-post-216-4</guid>
        <source url="https://forum.mesg.com/t/replace-structhash-with-json-encoding/216.rss">Replace structhash with json encoding</source>
      </item>
      <item>
        <title>Replace structhash with json encoding</title>
        <dc:creator><![CDATA[Nicolas]]></dc:creator>
        <description><![CDATA[
            <p>Anthony is right, we do need to encode in JSON some field that should not be for hash generation.</p>
<p>What about forking and improving the package <code>structhash</code>?</p>
          <p><a href="https://forum.mesg.com/t/replace-structhash-with-json-encoding/216/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mesg.com/t/replace-structhash-with-json-encoding/216/3</link>
        <pubDate>Tue, 22 Jan 2019 03:32:28 +0000</pubDate>
        <guid isPermaLink="false">forum.mesg.com-post-216-3</guid>
        <source url="https://forum.mesg.com/t/replace-structhash-with-json-encoding/216.rss">Replace structhash with json encoding</source>
      </item>
      <item>
        <title>Replace structhash with json encoding</title>
        <dc:creator><![CDATA[Anthony]]></dc:creator>
        <description><![CDATA[
            <p>Just as a warning using json for hashing will work but if we need to serialize the service in json then we have something really dependent to the hash.<br>
For example we want the <code>Hash</code> attribute in the json but we don’t want it in the hash. There is also the <code>DeployedAt</code> but i’m not even sure this is used.<br>
The <code>Hash</code> attribute is probably a design issue and shouldn’t be here in the first but this is the kind of problem we can have using <code>json.Marshal</code> for the hashing method</p>
          <p><a href="https://forum.mesg.com/t/replace-structhash-with-json-encoding/216/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mesg.com/t/replace-structhash-with-json-encoding/216/2</link>
        <pubDate>Tue, 22 Jan 2019 03:19:25 +0000</pubDate>
        <guid isPermaLink="false">forum.mesg.com-post-216-2</guid>
        <source url="https://forum.mesg.com/t/replace-structhash-with-json-encoding/216.rss">Replace structhash with json encoding</source>
      </item>
      <item>
        <title>Replace structhash with json encoding</title>
        <dc:creator><![CDATA[krhubert]]></dc:creator>
        <description><![CDATA[
            <p>Based on discussion <a href="https://github.com/mesg-foundation/core/issues/718#issuecomment-455535167" rel="nofollow noopener">https://github.com/mesg-foundation/core/issues/718#issuecomment-455535167</a></p>
<p>The structhash do not support <code>omitempty</code> flag. Moreover it dosen’t:</p>
<ul>
<li>panic on invalid tag (rather silently drop)</li>
<li>
<a href="https://github.com/cnf/structhash/blob/master/structhash.go#L180" rel="nofollow noopener">https://github.com/cnf/structhash/blob/master/structhash.go#L180</a> -  it serialize functions, channels etc … in our use case serializing channel/funcs don’t make any sens.</li>
</ul>
<p>So we need to fix it.</p>
<p>Is there a reason why we using this package instead of simple json?</p>
<p>we can use simply <code>sha1.Sum(josn.Marshal(service))</code>. End of story.</p>
<p>In that case we have well tested stable package and we can easily extend service struct by adding <code>omitempty</code> tag to every new field.</p>
<p>We just need to replace tag <code>hash</code> with <code>json</code> and get rid of dependency.</p>
          <p><a href="https://forum.mesg.com/t/replace-structhash-with-json-encoding/216/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mesg.com/t/replace-structhash-with-json-encoding/216/1</link>
        <pubDate>Mon, 21 Jan 2019 18:09:15 +0000</pubDate>
        <guid isPermaLink="false">forum.mesg.com-post-216-1</guid>
        <source url="https://forum.mesg.com/t/replace-structhash-with-json-encoding/216.rss">Replace structhash with json encoding</source>
      </item>
  </channel>
</rss>
