<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Create an API for Data Backups</title>
    <link>https://forum.mesg.com/t/create-an-api-for-data-backups/336</link>
    <description>Right now there is no way to download instance&#39;s data without hacking around with Docker&#39;s APIs. There is a need for a new API to download(export) and upload(import) data of stateful services like databases. 

There are many motivation behind this but this is specially needed to prevent data loss by scheduling regular backups.

My suggestion is to add new funcs to Instance API to download and upload data to/from specific directory inside data volume.

Services like _service-mongodb_ should support creation of multiple databases because a service might be used by multiple users in the network. All users should have access to their own databases by providing a secret that genered during the creation of database. This behaviour should be supported by &quot;good quality&quot; services. 

This is why it&#39;s important to have the ability to download a sub directly inside a data volume. Because a user only should be able to download its own database data from the filesystem.

**Sample API**
```
Instance.DownloadBackup(instanceHash, directoryName)
Instance.UploadBackup(instanceHash, directoryName)
```

`directoryName` actually the &quot;secret&quot; of user.
for example:
* if _directoryName_ is: `88jugi4963mk56pzh2dn6nh6nijg8gr1ltzdc64i`
* _DownloadBackup()_ will download from a path like this: `/var/data/88jugi4963mk56pzh2dn6nh6nijg8gr1ltzdc64i`

An another option would be directly uploading backups to IPFS with encryption or enabling layered data synchronisations to a cloud storage service.</description>
    
    <lastBuildDate>Mon, 08 Jul 2019 17:31:36 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="https://forum.mesg.com/t/create-an-api-for-data-backups/336.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Create an API for Data Backups</title>
        <dc:creator><![CDATA[ilgooz]]></dc:creator>
        <description><![CDATA[
            <p>IPS scares me too. IPS is also scary for me for “private” services to be uploaded there. Maybe MESG should give an option to users about if they prefer to use IPFS or bring their own cloud storage. But anyway, it’s an option.</p>
<p>I believe that putting too much logic into CLI will do no good since it limits users with javascript. It’s not required to put every API directly inside the Engine but there should be a way to interact with all features that MESG offers, in every programming language via an API.</p>
          <p><a href="https://forum.mesg.com/t/create-an-api-for-data-backups/336/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mesg.com/t/create-an-api-for-data-backups/336/3</link>
        <pubDate>Mon, 08 Jul 2019 17:31:36 +0000</pubDate>
        <guid isPermaLink="false">forum.mesg.com-post-336-3</guid>
        <source url="https://forum.mesg.com/t/create-an-api-for-data-backups/336.rss">Create an API for Data Backups</source>
      </item>
      <item>
        <title>Create an API for Data Backups</title>
        <dc:creator><![CDATA[Anthony]]></dc:creator>
        <description><![CDATA[
            <p>This is a good idea, I’m not sure about the export/import api, maybe having more information in the instance object like the list of volumes used, the different configurations, etc… and then a tool outside of the engine can do the export/import. This can even be done by the CLI itself or a dedicated tool that only manages import/export and I like the idea to have synchronization on IPFS with encryption but IPFS doesn’t really guarantee the persistence of data and it might be scary for people to put that on a public network (even if there is encryption).</p>
          <p><a href="https://forum.mesg.com/t/create-an-api-for-data-backups/336/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mesg.com/t/create-an-api-for-data-backups/336/2</link>
        <pubDate>Mon, 08 Jul 2019 03:46:41 +0000</pubDate>
        <guid isPermaLink="false">forum.mesg.com-post-336-2</guid>
        <source url="https://forum.mesg.com/t/create-an-api-for-data-backups/336.rss">Create an API for Data Backups</source>
      </item>
      <item>
        <title>Create an API for Data Backups</title>
        <dc:creator><![CDATA[ilgooz]]></dc:creator>
        <description><![CDATA[
            <p>Right now there is no way to download instance’s data without hacking around with Docker’s APIs. There is a need for a new API to download(export) and upload(import) data of stateful services like databases.</p>
<p>There are many motivation behind this but this is specially needed to prevent data loss by scheduling regular backups.</p>
<p>My suggestion is to add new funcs to Instance API to download and upload data to/from specific directory inside data volume.</p>
<p>Services like <em>service-mongodb</em> should support creation of multiple databases because a service might be used by multiple users in the network. All users should have access to their own databases by providing a secret that genered during the creation of database. This behaviour should be supported by “good quality” services.</p>
<p>This is why it’s important to have the ability to download a sub directly inside a data volume. Because a user only should be able to download its own database data from the filesystem.</p>
<p><strong>Sample API</strong></p>
<pre><code class="lang-auto">Instance.DownloadBackup(instanceHash, directoryName)
Instance.UploadBackup(instanceHash, directoryName)
</code></pre>
<p><code>directoryName</code> actually the “secret” of user.<br>
for example:</p>
<ul>
<li>if <em>directoryName</em> is: <code>88jugi4963mk56pzh2dn6nh6nijg8gr1ltzdc64i</code>
</li>
<li>
<em>DownloadBackup()</em> will download from a path like this: <code>/var/data/88jugi4963mk56pzh2dn6nh6nijg8gr1ltzdc64i</code>
</li>
</ul>
<p>An another option would be directly uploading backups to IPFS with encryption or enabling layered data synchronisations to a cloud storage service.</p>
          <p><a href="https://forum.mesg.com/t/create-an-api-for-data-backups/336/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.mesg.com/t/create-an-api-for-data-backups/336/1</link>
        <pubDate>Fri, 05 Jul 2019 16:50:02 +0000</pubDate>
        <guid isPermaLink="false">forum.mesg.com-post-336-1</guid>
        <source url="https://forum.mesg.com/t/create-an-api-for-data-backups/336.rss">Create an API for Data Backups</source>
      </item>
  </channel>
</rss>
